<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgpalife.resourcemanagement.mapper.NetworkRoomMapper">
  <resultMap id="BaseResultMap" type="com.dgpalife.resourcemanagement.model.NetworkRoom">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="networkroom_name" jdbcType="VARCHAR" property="networkroom_name" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="workplace_id" jdbcType="BIGINT" property="workplaceId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, networkroom_name, floor, workplace_id, create_time, creator_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_network_room
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_network_room
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dgpalife.resourcemanagement.model.NetworkRoom">
    insert into t_network_room (id, networkroom_name, floor,
      workplace_id, create_time, creator_id
      )
    values (#{id,jdbcType=BIGINT}, #{networkroom_name,jdbcType=VARCHAR}, #{floor,jdbcType=VARCHAR},
      #{workplaceId,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR}, #{creatorId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dgpalife.resourcemanagement.model.NetworkRoom">
    insert into t_network_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="networkroom_name != null">
        networkroom_name,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="workplaceId != null">
        workplace_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="networkroom_name != null">
        #{networkroom_name,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="workplaceId != null">
        #{workplaceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dgpalife.resourcemanagement.model.NetworkRoom">
    update t_network_room
    <set>
      <if test="networkroom_name != null">
        networkroom_name = #{networkroom_name,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="workplaceId != null">
        workplace_id = #{workplaceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dgpalife.resourcemanagement.model.NetworkRoom">
    update t_network_room
    set networkroom_name = #{networkroom_name,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      workplace_id = #{workplaceId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectNetworkRoomListByWorkplaceId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_network_room
    WHERE workplace_id = #{workplaceId}
    ORDER BY networkroom_name ASC
  </select>

  <select id="selectNetworkRoomListByWorkpID" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_network_room
    <where>
      <if test="queryText!=null">
        workplace_id = #{queryText}
      </if>
    </where>
    ORDER BY networkroom_name ASC
  </select>

  <select id="selectNetworkroomCount" resultType="Integer">
    SELECT
    count(id)
    FROM t_network_room
    <where>
      <if test="queryText!=null">
        workplace_id = #{queryText}
      </if>
    </where>
  </select>
</mapper>